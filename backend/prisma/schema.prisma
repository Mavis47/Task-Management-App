// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  role     String  @default("user")
  
  tasks           Task[] @relation("AssignedTasks")    // tasks assigned TO this user
  assignedTasks   Task[] @relation("assignedByRelation") // tasks assigned BY this user
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  status      String   @default("pending")
  priority    String   @default("medium")
  dueDate     DateTime?
  assignedTo  Int
  user        User     @relation("AssignedTasks", fields: [assignedTo], references: [id])
  assignedBy  Int?   // optional
  assigner    User?  @relation("assignedByRelation", fields: [assignedBy], references: [id])
  documents   Document[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Document {
  id           Int      @id @default(autoincrement())
  originalName String
  filename     String
  mimetype     String
  size         Int
  url          String     
  filepath     String?
  taskId       Int
  task         Task       @relation(fields: [taskId], references: [id])
  createdAt    DateTime   @default(now())
}

